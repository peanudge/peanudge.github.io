<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Peaut Lover Tech Blog Blog</title>
        <link>https://peanut-lover.github.io/</link>
        <description>Peaut Lover Tech Blog Blog</description>
        <lastBuildDate>Sun, 26 Feb 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[소프트엔지니어에게 필요한 데이터 문해력 (초안)]]></title>
            <link>https://peanut-lover.github.io/data-literacy-for-engineer</link>
            <guid>https://peanut-lover.github.io/data-literacy-for-engineer</guid>
            <pubDate>Sun, 26 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[data literacy for softengineer]]></description>
            <content:encoded><![CDATA[<p>홈서비스 O2O 플랫폼 서비스를 제공하는 미소에서 근무할 때 가장 인상 깊었던 경험이라면 "데이터 문해력"이라는 책을 읽고 PM, PO 분들과 매주 스터디를 했던 두 달이 기억납니다.</p><p>항상 데이터를 기반으로 의사 결정을 해야한다는 말을 많이 들으면서 미소에서 서비스 프러덕트를 개발해왔지만 "데이터 문해력" 북 스터디를 진행하기 전까지는 우리 팀이 정말로 데이터 기반으로 의사결정을 하고 있는지 확신이 들지 않았습니다.</p><p>대부분 팀원들이 단순히 "데이터 기반으로 의사결정을 한다"라는 문장 그대로 의미를 받아들였던 것 같습니다. <strong>특정한 결정을 할 때는 의사결정권자들을 설득할만한 데이터를 보여줘야한다는 피상적인 이해</strong>만 가지고 업무를 진행해왔습니다. 이 정도 이해만으로는 원하는 데이터가 없으면 새로운 결정을 할 수도 없어서 아무런 행동을 못하게 되거나 데이터가 없더라도 아무것도 안하는 것보단 나을 것이라는 이유로 개발을 시작하곤 합니다. 이러한 접근들이 프로젝트 진행에 답답함을 느끼게하는 것 같습니다. (물론 대부분의 조직의 PM들이 이런 답답함을 해소해주고 도와주고 있습니다.)</p><p>특히, 주관적인 생각일 수도 있지만 엔지니어들은(특히, 한 때 방법맨이었던 과거의 나) 방법론에만 집중하려는 접근을 많이 가지고 있는 것 같습니다. 엔지니어는 문제를 해결하는 방법을 주로 배우고 다루기 때문에 당연한 것일 수도 있습니다. (엔지니어로 성장하는 과정 중 학교, 시험, 취업준비에서 항상 문제 정의는 출제자나 교수님, 책에서 명확히 제안해주니...)</p><p>하지만 실제 현실 세계의 문제들을 해결할 시니어 엔지니어나 프러덕트 매니저가 될 엔지니어들에겐 <strong>문제 정의, 문제와 일치하는 데이터를 찾는 능력</strong>이 필수가 되는 시대가 된 것 같습니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="데이터-문해력이란">데이터 문해력이란?<a href="#데이터-문해력이란" class="hash-link" aria-label="Direct link to 데이터 문해력이란?" title="Direct link to 데이터 문해력이란?">​</a></h2><p>(작성 중...)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="구글-엔지니어들에게서도-보이는-데이터-문해력-gsm---goal-signal-metric">구글 엔지니어들에게서도 보이는 데이터 문해력 (GSM - Goal Signal Metric)<a href="#구글-엔지니어들에게서도-보이는-데이터-문해력-gsm---goal-signal-metric" class="hash-link" aria-label="Direct link to 구글 엔지니어들에게서도 보이는 데이터 문해력 (GSM - Goal Signal Metric)" title="Direct link to 구글 엔지니어들에게서도 보이는 데이터 문해력 (GSM - Goal Signal Metric)">​</a></h2><p>"구글 엔지니어는 이렇게 읽한다"(Software Engineering at Google)라는 책을 읽으면서도 데이터문해력이 소프트웨어 엔지니어에게 필수라고 불리는 근거를 살펴볼 수 있습니다.</p><p>성능 지표를 수집해야하는가? 어떻게 수집해야하는가?에 대한 가이드로 GSM 이라는 개념 소개하는 내용이 있습니다.</p><p>(작성 중...)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="사이드-프로젝트에서도-필요해보이는-데이터-문해력">사이드 프로젝트에서도 필요해보이는 데이터 문해력<a href="#사이드-프로젝트에서도-필요해보이는-데이터-문해력" class="hash-link" aria-label="Direct link to 사이드 프로젝트에서도 필요해보이는 데이터 문해력" title="Direct link to 사이드 프로젝트에서도 필요해보이는 데이터 문해력">​</a></h2><p>시험삼아 적용해보고 진짜 효과적인가에 대한 의문이 생겼습니다. 그래서 외부 실제 스터디에서 실행했던 프로젝트에서 저는 의식적으로 데이터 문해력에서 파악한 내용을 적용해보려 했습니다.</p><ul><li>문제 제대로 정의해보기. (문제, 원인, 방법 제대로 구분/정의하기)</li></ul><p>(작성 중...)</p>]]></content:encoded>
            <category>data</category>
            <category>literacy</category>
            <category>engineer</category>
            <category>google</category>
        </item>
        <item>
            <title><![CDATA[문서화를 잘하기 위한 시각화 도구 - Mermaid]]></title>
            <link>https://peanut-lover.github.io/mermaid-for-document</link>
            <guid>https://peanut-lover.github.io/mermaid-for-document</guid>
            <pubDate>Wed, 15 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[mermiad를 이용해서 문서를 시각화하는 방법]]></description>
            <content:encoded><![CDATA[<p>가끔 블로그 글을 적거나 프로젝트를 하면서 markdown으로 PR을 남길 때 특정 기술적 흐름에 대한 설명을 할 때 너무 많은 텍스트를 작성해야할 경우가 있습니다. 그 때마다 다이어그램을 그려서 캡쳐를 하거나 gif를 만들어서 설명에 함께 첨부하는 것이 이해를 도와주곤 합니다. 하지만 시간이 지나면서 그 다이어그램에 부가적인 요소를 추가하거나 수정사항이 생기면 다시 이미지를 만들어야하는 귀찮은 상황이 발생합니다. 결국 이런 귀찮음은 문서화를 소홀히하게 되는 원인이 되곤합니다. (그 이외에도 이유는 많긴합니다.)</p><p>이런 문제를 해결하기 위해 다른 팀원들과 수정가능하고 히스토리를 기억할 수 있는 mermaid라는 도구를 학습해보려합니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="mermaid-란"><a href="https://mermaid.js.org/" target="_blank" rel="noopener noreferrer">Mermaid</a> 란?<a href="#mermaid-란" class="hash-link" aria-label="Direct link to mermaid-란" title="Direct link to mermaid-란">​</a></h2><blockquote><p>Mermaid: Diagramming and charting tool
JavaScript based diagramming and charting tool that renders Markdown-inspired text definitions to create and modify diagrams dynamically.</p></blockquote><p>다이어그램이나 차트를 텍스트나 코드로 만들 수 있게 해주는 도구입니다.</p><p><a href="https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/" target="_blank" rel="noopener noreferrer">https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/</a></p><p>깃허브 블로그에서도 Mermaid에 대해 소개하고 있습니다.</p><p><code>The main purpose of Mermaid is to help documentation catch up with development.</code></p><p>그리고 마음에 드는 설명 중 하나는 "개발을 캐치업(이해를 도와주는)해주는 문서를 작성하기 위한 목적"이라고 합니다. 이런 도구가 정말 필요하다고 생각했는데 이번 기회에 제대로 학습해서 업무를 하는데도 써먹어보려합니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="무엇을-할-수-있을까">무엇을 할 수 있을까?<a href="#무엇을-할-수-있을까" class="hash-link" aria-label="Direct link to 무엇을 할 수 있을까?" title="Direct link to 무엇을 할 수 있을까?">​</a></h2><p>Mermaid는 소프트웨어 프로젝트에서 흔히 볼 수 있는 다이어그램들을 지원합니다.</p><ul><li>Flowchart</li><li>Sequence diagram</li><li>State diagram</li><li>Gantt diagram</li><li>Class diagram</li><li>Git graph</li><li>Pie Chart</li><li>Entity Relationship Diagram (experimental)</li><li>User Journey Diagram</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="어떻게-만들-수-있을까">어떻게 만들 수 있을까?<a href="#어떻게-만들-수-있을까" class="hash-link" aria-label="Direct link to 어떻게 만들 수 있을까?" title="Direct link to 어떻게 만들 수 있을까?">​</a></h2><p>위와 같이 정해진 mermaid syntax 를 이용하면 iframe을 통해 브라우저의 iframe 기능을 통해 다이어그램을 그려주게 됩니다. 간단히 만들어보고 자세한 syntax 설명은 공식 문서를 살펴보는 것이 좋을 것 같습니다.</p><p>자주 사용할 만한 도구로 Flow Chart와 State Diagram, Gantt Chart, Git Graph를 예시로 사용해보겠습니다.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="flow-chart">Flow Chart<a href="#flow-chart" class="hash-link" aria-label="Direct link to Flow Chart" title="Direct link to Flow Chart">​</a></h3><p>Flow Chart는 간단히 말해 단순히 그래프를 나타내는 것입니다. 모든 플로우 차트는 노드들로 구성되고 화살표나 선들로 연결되는 형태를 말합니다. 용도에 따라 다양한 이름이 붙을 수 있습니다.</p><p>간단히 예를들어 프론트엔드 UX 주문 플로우를 문서화해서 남기고 싶다고 가정해보죠!</p><p>아주 간략히 생각나는데로 남겨보면 위와 같은 다이어그램을 손쉽게 만들 수 있습니다.</p><div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">flowchart LR</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    campaign_click[상품캠페인클릭] --&gt; product[상품상세] --&gt; select_opt[상품옵션선택] --&gt; request_buy[구매요청] --&gt; select_payment[결제방법선택] --&gt; request_payment[PG사-결제요청] --&gt; success[구매완료]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>마크다운으로는 위와 같이 나타낼 수 있을듯 합니다. 생각보다 간단히 시각화할 수 있어서 좋은듯 합니다.</p><p>mermaid에서 지원하는 기능들을 활용한다면 조금 더 위 다이어그램을 다듬을 수 있을듯합니다. 노드들이 대상과 동작이 섞여있는 듯하니 분리하여 나타내보겠습니다.</p><p>이렇게 화살표에 텍스트를 남기거나 다른 형태의 연결을 만들 수도 있음을 확인할 수 있습니다. PR 요청을 할 때 어떤 프로세스의 문제를 해결하거나 문제를 논의할 때 수정가능한 시각화된 자료가 있다면 소통이 더 원활할 것 같습니다.</p><p>더 복잡한 플로우를 만들 수도 있지만 지면이 부족하니 더 설명하진 않겠습니다. 공식문서를 보시면 더 많은 것들을 할 수 있습니다! 아래와같이 복잡도 높은 표현도 가능합니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="docusaurus에서-mermaid-다이어그램-이용하기">Docusaurus에서 Mermaid 다이어그램 이용하기<a href="#docusaurus에서-mermaid-다이어그램-이용하기" class="hash-link" aria-label="Direct link to Docusaurus에서 Mermaid 다이어그램 이용하기" title="Direct link to Docusaurus에서 Mermaid 다이어그램 이용하기">​</a></h2><p>github의 마크다운을 해석하는 환경에서는 기본적으로 mermaid 를 사용가능하지만 이 블로그는 Docusaurus의 마크다운을 통해서는 바로 다이어그램이 그려지지않아 살펴보니 직접 활성화 시켜줘야했습니다.</p><p>Docusaurus에서 mermiad 다이어그램을 이용하려면 <code>@docusaurus/theme-mermaid</code> 플러그인을 설치해주고 <code>docusaurus.config.js</code>에 설정을 해줘야합니다.</p><blockquote><p><a href="https://docusaurus.io/docs/markdown-features/diagrams" target="_blank" rel="noopener noreferrer">https://docusaurus.io/docs/markdown-features/diagrams</a></p></blockquote><ol><li>설치</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">yarn</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> @docusaurus/theme-mermaid</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li><code>docusaurus.config.js</code>내에서 mermaid 설정</li></ol><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">markdown</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">mermaid</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">themes</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"@docusaurus/theme-mermaid"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="정리">정리<a href="#정리" class="hash-link" aria-label="Direct link to 정리" title="Direct link to 정리">​</a></h2><p>markdown의 활용도가 점차 넓어지는 것 같다. 문서화를 점점 지원하는 프로세스나 도구가 늘고 있어서 잘 쫓아가면 문서화를 업무 프로세스에 녹여내기 점차 쉬워질 것 같습니다.</p><p>mermaid live editor라는 위지윅 도구를 활용하면 더욱 쉽게 다이어그램을 만들어낼 수 있으니 팀원들 설득해서 좋은 문서화를 잘할 수 있을 것 같습니다.</p><p>그리고 문서를 읽다보니 text to diagram이 가능하니 code =&gt; diamgram 를 잘 활용하면 더 훌륭한 자동화 도구를 만들 수 있지않을까 생각이 듭니다.</p><blockquote><p>이전에 학습했던 AST 분석과 mermaid 활용해서 재밋는 도구를 만들어 볼 수 있을 것 같습니다.</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="참조">참조<a href="#참조" class="hash-link" aria-label="Direct link to 참조" title="Direct link to 참조">​</a></h2><blockquote><p><a href="https://mermaid.js.org/syntax/flowchart.html" target="_blank" rel="noopener noreferrer">https://mermaid.js.org/syntax/flowchart.html</a></p></blockquote><blockquote><p><a href="https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/" target="_blank" rel="noopener noreferrer">https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/</a></p></blockquote>]]></content:encoded>
            <category>document</category>
            <category>visualize</category>
            <category>mermaid</category>
        </item>
        <item>
            <title><![CDATA[블로그 리뷰 기능 추가하기(Utterances 위젯)]]></title>
            <link>https://peanut-lover.github.io/utterances</link>
            <guid>https://peanut-lover.github.io/utterances</guid>
            <pubDate>Thu, 09 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[how to add review feature about blog]]></description>
            <content:encoded><![CDATA[<p>블로그에 글을 자주 쓰고 싶지만 주제 선택에 너무 신중해서 자주 쓰지 못하고 있는 것 같습니다. 하지만 조금 더 가볍게 쓰는 습관을 들이고 피드백도 받아보고 싶어서 사소한 기술 공부에 대한 글도 남겨보려합니다.</p><p>간단히 Docusaurus 프레임워크에 깃 이슈를 통해 답글을 남길 수 있도록 하기위해서 Utterances 플러그인을 적용하는 방법을 글로 남겨보겠습니다.</p><p>그리고 기술 블로그의 독자는 Docusaurus의 기반 기술인 리액트에 대한 이해는 가지고 있다고 가정해서 글을 남겨보겠습니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="utterances-위젯이란">Utterances 위젯이란?<a href="#utterances-위젯이란" class="hash-link" aria-label="Direct link to Utterances 위젯이란?" title="Direct link to Utterances 위젯이란?">​</a></h2><p>바로 연동 방법을 찾아보기 전에 <code>Utterances</code>를 한 번 이해해본 후 사용법을 알아봅시다.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="공식-홈페이지를-확인해보자">공식 홈페이지를 확인해보자.<a href="#공식-홈페이지를-확인해보자" class="hash-link" aria-label="Direct link to 공식 홈페이지를 확인해보자." title="Direct link to 공식 홈페이지를 확인해보자.">​</a></h3><blockquote><p>🏠 공식 홈페이지
<a href="https://utteranc.es/" target="_blank" rel="noopener noreferrer">https://utteranc.es/</a></p></blockquote><p><code>A lightweight comments widget built on GitHub issues</code></p><p>위에서 플러그인이라고 말했는데 사실 위젯이 맞는 것 같습니다. 댓글을 제공해주는 위젯이니 명칭을 수정해야겠네요.</p><p><code>for blog comments, wiki pages and more!</code></p><p>해당 위젯의 사용처는 블로깅이나 위키 페이지 등등에 사용하라고 밝히고 있으니 적절한 도구인 것 같네요.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Open source. 🙌</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">No tracking, no ads, always free. 📡🚫</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">No lock-in. All data stored in GitHub issues. 🔓</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Styled with Primer, the css toolkit that powers GitHub. 💅</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dark theme. 🌘</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Lightweight. Vanilla TypeScript. No font downloads, JavaScript frameworks or polyfills for evergreen browsers. 🐦🌲</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>소개란에 내용들이 적절하게 위젯을 잘 소개하고 있는 것 같습니다. 자세히보니 오픈소스이면서 광고도 붙지않고 항상 공짜라고 밝혀서 마음놓고 사용해도 될 것 같습니다. 그리고 댓글들은 git issue에 모두 저장되어 마음놓고 사용해도 될 것 같습니다.</p><p>👀 <em>추가로 이것을 활용해서 특별한 집계도 할 수 있을가하는 생각도 드네요. 나중에 활용해보면 좋을 것 같습니다.</em></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-how-its-work-동작-방식">⛓ How its work (동작 방식)<a href="#-how-its-work-동작-방식" class="hash-link" aria-label="Direct link to ⛓ How its work (동작 방식)" title="Direct link to ⛓ How its work (동작 방식)">​</a></h2><p>가끔 이런 위젯이나 도구를 발견할 때 동작원리를 이해하면 다른 도구를 개발할 때 많은 도움이 되었던 사례들이 종종 있습니다. 그래서 간단히 Urtterances의 동작원리도 이해해보겠습니다.</p><ol><li><p>Urttrances 위젯이 특정 페이지에 로드될 경우, <a href="https://docs.github.com/ko/rest/search?apiVersion=2022-11-28#search-issues" target="_blank" rel="noopener noreferrer">Github issue search API</a>를 이용해서 <code>url</code>, <code>pathname</code> 혹은 <code>title</code>를 기반으로 관련된 issue를 찾게됩니다.</p></li><li><p>만약, 여기서 페이지에 대한 Git Issue를 찾지 못하더라도 문제가 되지않습니다. <a href="https://github.com/utterances-bot" target="_blank" rel="noopener noreferrer"><code>utterances-bot</code></a>은 자동으로 특정 누군가 처음으로 댓글을 작성했을 때 페이지의 새로운 git issue 생성합니다.</p></li></ol><p>그리고 댓글 작성자들이 위젯을 통해 댓글을 작성하기 위해서는 uterrances app에 깃허브 계정 권한을 할당해줘야합니다. 이 과정은 Github OAuth Flow를 따라 진행하게 됩니다. 직접 issue를 남기는게 아니라 utterances 봇에게 작업을 위임하는 것이니 당연히 필요한 작업이겠죠.</p><p>하지만 다소 귀찮게도 느껴집니다. (<em>작성 과정에서 이탈하는 작성자들도 있을 것 같습니다.</em>)</p><p>대안책으로 인증없이 git issue에 직접 댓글을 남길 수도 있습니다.</p><p>대략적인 동작방식은 알았으니 설정방법을 살펴보겠습니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-configuration-설정-방법">🛠 Configuration (설정 방법)<a href="#-configuration-설정-방법" class="hash-link" aria-label="Direct link to 🛠 Configuration (설정 방법)" title="Direct link to 🛠 Configuration (설정 방법)">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="블로그-repository에-utterances-github-앱-연동하기">블로그 Repository에 Utterances Github 앱 연동하기<a href="#블로그-repository에-utterances-github-앱-연동하기" class="hash-link" aria-label="Direct link to 블로그 Repository에 Utterances Github 앱 연동하기" title="Direct link to 블로그 Repository에 Utterances Github 앱 연동하기">​</a></h3><p>🚧 Utterances가 정상적으로 동작하기 위해서는 댓글(git issue)이 등록될 Repository에 몇가지 확인 및 설정이 필요합니다.</p><ol><li><p>Repository 는 <strong>public으로 공개되어 있어야</strong> 독자들이 git issue에 있는 댓글들을 가져와서 확인할 수 있습니다.</p></li><li><p><a href="https://github.com/apps/utterances" target="_blank" rel="noopener noreferrer">utterances github app</a> 이 Repository에 설치되어 있어야합니다.</p></li></ol><p>설치가 되어 있지 않으면 댓글을 위젯을 통해 작성할 수 없습니다.</p><p>utterances 앱을 repository에 설치하기 위해서 <a href="https://github.com/apps/utterances" target="_blank" rel="noopener noreferrer">https://github.com/apps/utterances</a> 에서 <code>Configure</code> 버튼을 눌러 Repository에 설치를 진행할 수 있습니다.</p><p>권한이 주어졌다면 repository의 Settings &gt; Integrations &gt; GitHub apps 에서 Utterances 앱을 확인할 수 있습니다.</p><ol start="3"><li>해당 repository가 fork된 repository라면 <code>settings</code> 탭을 통해 <code>issues</code> 기능을 활성화 시켜주세요.</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="html에-등록될-widget-script-생성">HTML에 등록될 Widget Script 생성<a href="#html에-등록될-widget-script-생성" class="hash-link" aria-label="Direct link to HTML에 등록될 Widget Script 생성" title="Direct link to HTML에 등록될 Widget Script 생성">​</a></h3><p>위 설정들이 잘 수행되었다면 <a href="https://utteranc.es/" target="_blank" rel="noopener noreferrer">https://utteranc.es/</a> 에 있는 form을 통해 <code>script</code> 코드를 생성해서 웹페이지에 등록해봅시다.</p><p>Repository의 이름을 <code>peanut-lover/peanut-lover.github.io</code>로 입력하고</p><p>Blog Post를 Issue와 어떻게 Mapping 시킬지를 정하면됩니다.</p><p>저는 blog pathname이 자주 바뀔 것 같지않아서 <code>Issue title contains page pathname</code>를 이용해서 매핑을 하도록하겠습니다.</p><p>이렇게 입력을 하게되면 <code>Enable Utterances</code> 란에 아래와 같이 즉시 사용할 수 있는 script태그가 생성됩니다.</p><div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">script</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://utteranc.es/client.js</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">repo</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">peanut-lover / peanut-lover.github.io</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">issue-term</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">pathname</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">theme</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">github-light</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">crossorigin</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">anonymous</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">async</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f"></span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">script</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="uttrances를-docusaurus-프레임워크에-적용하기">Uttrances를 Docusaurus 프레임워크에 적용하기<a href="#uttrances를-docusaurus-프레임워크에-적용하기" class="hash-link" aria-label="Direct link to Uttrances를 Docusaurus 프레임워크에 적용하기" title="Direct link to Uttrances를 Docusaurus 프레임워크에 적용하기">​</a></h2><p>위와 같은 결과를 가지고 docusaurus 블로그에 적용하려니 어떻게 할지 감이 안잡혀서 우선 공식문서를 뒤져봤습니다.</p><p>블로그 글은 Markdown 형태로 컨텐츠만 사용해왔던터라 블로그의 Layout를 어떻게 커스터마이징해야할지 몰랐습니다. 공식문서에는 Layout Custom라는 키워드로 탐색을 해보니 <code>Swizzling</code> 이라는 항목이 있었고 내용을 확인해봤습니다.</p><blockquote><p>This section is similar to Styling and Layout, but this time, we will write actual React code instead of playing with stylesheets. We will talk about a central concept in Docusaurus: swizzling, which allows deeper site customizations.</p></blockquote><p>딱 저희에게 필요한 방식이죠. React Component를 커스터마이징할 수 있도록 제공된 방법이라고합니다.</p><blockquote><p>👀 TMI: Swizzling이라고 불리는 이유?
Objective-C and Swift-U 에서 넘어온 단어라고 합니다. 기존 메소드의 구현체를 변환시키는 작업을 method swizzling이라고 합니다.
Docusaurus에서는 component swizzling은 built-in 제공하는 컴포넌트를 대체하는 컴포넌트를 제공하는 것을 의미합니다.</p></blockquote><p>마치 CRA의 eject 개념과 유사한 개념인 듯합니다. 그리고 docusarus도 특별한 CLI를 제공합니다.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">yarn</span><span class="token plain"> swizzle</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Swizzle 과정은 아래와같이 처리됩니다. (Swizzling 자체에 대한 설명은 공식문서에서 잘 설명이 되있으니 링크로 대체합니다!)</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="blogpostpaginator-컴포넌트를-swizzle해서-utterance-위젯-추가">BlogPostPaginator 컴포넌트를 <code>swizzle</code>해서 Utterance 위젯 추가<a href="#blogpostpaginator-컴포넌트를-swizzle해서-utterance-위젯-추가" class="hash-link" aria-label="Direct link to blogpostpaginator-컴포넌트를-swizzle해서-utterance-위젯-추가" title="Direct link to blogpostpaginator-컴포넌트를-swizzle해서-utterance-위젯-추가">​</a></h3><p><code>yarn swizzle</code>를 이용하면 아래와 같은 CLI 과정을 거쳐 docusaurus의 built-in 컴포넌트를 wrapping하는 컴포넌트(<code>src/theme/BlogPostPaginator/index.js</code>)를 자동 생성해줍니다.</p><blockquote><p>🚧 eject 방식이 아닌 wrapper 를 생성하도록 유의해주세요~</p></blockquote><p><a href="https://asciinema.org/a/DqcP8Le024hrJ2zy7de3br8fN" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://asciinema.org/a/DqcP8Le024hrJ2zy7de3br8fN.svg" alt="asciicast" class="img_ev3q"></a></p><p>자! 이제 위에서 생성했던 utterances <code>&lt;script/&gt;</code>를 리액트 컴포넌트로 사용할 수 있도록 재사용 컴포넌트(<code>src/components/Uttrances.tsx</code>)를 생성해주겠습니다.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// NOTE: The following script is auto-generated by https://utteranc.es/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//  &lt;script</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//    src="https://utteranc.es/client.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//    repo="peanut-lover/peanut-lover.github.io"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//    issue-term="pathname"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//    theme="github-light"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//    crossorigin="anonymous"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//    async</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//  &gt;&lt;/script&gt;;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">memo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">section</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ref</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">elem</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">elem</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> scriptElement </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">createElement</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"script"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      scriptElement</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">src</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"https://utteranc.es/client.js"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      scriptElement</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">async</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      scriptElement</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setAttribute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"repo"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"peanut-lover/peanut-lover.github.io"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      scriptElement</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setAttribute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"issue-term"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pathname"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      scriptElement</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setAttribute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"theme"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"github-light"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      scriptElement</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">crossOrigin</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"anonymous"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      elem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">appendChild</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">scriptElement</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이 컴포넌트를 아래와 같이 <code>src/theme/BlogPostPaginator/index.js</code>에 적용하면 끝입니다!</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">BlogPostPaginator</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"@theme-original/BlogPostPaginator"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Uttrances</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"@site/src/components/Uttrances"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">BlogPostPaginatorWrapper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">props</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">BlogPostPaginator</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain">props</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div style</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">marginTop</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Uttrances</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="정리">정리<a href="#정리" class="hash-link" aria-label="Direct link to 정리" title="Direct link to 정리">​</a></h2><p>위에서 소개한 Docusaurus의 Swizzling 기술을 이용해서 다양한 컴포넌트를 커스터마이징을 할 수 있습니다. <code>yarn swizzle --list</code>로 확인할 수 있는 커스터마이징 가능한 컴포넌트들이 있는데 주의해서 적절한 컴포넌트를 골라야합니다. <code>BlogPostItem</code>에 처음 Utterances 위젯을 붙였었는데 BlogPost를 List할 때도 <code>BlogPostItem</code> 컴포넌트들이 보이는 이슈가 있었습니다. 그래서 적절한 컴포넌트를 고르기 위해서는 어느정도 시행착오가 필요할 것 같습니다. 컴포넌트들의 이름만으로는 이해하기 힘드니 직접 적용해보고 테스트해보시길 바랍니다.</p>]]></content:encoded>
            <category>utterances</category>
            <category>review</category>
            <category>blog</category>
        </item>
        <item>
            <title><![CDATA[Mono Repo(Nx)에 React Native 앱 세팅하기]]></title>
            <link>https://peanut-lover.github.io/react-native-on-mono-repo</link>
            <guid>https://peanut-lover.github.io/react-native-on-mono-repo</guid>
            <pubDate>Sun, 22 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Setting mono repo using React Native CLI]]></description>
            <content:encoded><![CDATA[<p>react native 프로젝트를 웹 프로젝트들과 함께 관리하면 용이할 것 같아서 구성을 해보게 되었습니다.</p><p><a href="https://nx.dev/getting-started/package-based-repo-tutorial" target="_blank" rel="noopener noreferrer">NX</a>를 이용해서 React Native 프로젝트를 포함한 모노레포를 구성할 때 3가지 옵션이 있습니다.</p><ul><li>NX에서 재공해주는 React Native Project 템플릿 사용</li><li>yarn workspaces 와 <code>npx react-native init</code> 으로 구성 (<code>no-hoist</code> 옵션)</li><li>yarn workspaces 와 <code>npx react-native init</code> 으로 구성 (스크립트들의 경로를 직접 수정)</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nx에서-제공해주는-react-native-project-템플릿-사용">NX에서 제공해주는 React Native Project 템플릿 사용<a href="#nx에서-제공해주는-react-native-project-템플릿-사용" class="hash-link" aria-label="Direct link to NX에서 제공해주는 React Native Project 템플릿 사용" title="Direct link to NX에서 제공해주는 React Native Project 템플릿 사용">​</a></h2><p><a href="https://nx.dev/packages/react-native" target="_blank" rel="noopener noreferrer">https://nx.dev/packages/react-native</a></p><p>NX에서 react native를 위한 프로젝트 구성이 있어서 해당 템플릿을 이용하는게 NX 모노레포에서는 이상적인 것 같았지만 React Native 업데이트마다 구성을 쉽게 수정할 수 있을까에 대한 고민이 있었습니다. 그리고 이 템플릿은 같은 모노레포 내 다른 프로젝트들의 공유를 위해 typescript tsconfig의 <code>path</code> 기능을 활용합니다.</p><p>직접 프로젝트를 구성하며 시행착오를 겪었지만 typescript 구성(<code>compoiste</code>)에 이슈가 있고 github issue 커뮤니케이션을 보니 빠른시기에 해결책이 나올 것 같지않아 해당 방법은 추후에 다시 시도해보기로 했습니다. (<a href="https://github.com/nrwl/nx/issues/12417" target="_blank" rel="noopener noreferrer">https://github.com/nrwl/nx/issues/12417</a>)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="npx-react-native-init-with-no-hoistoption"><code>npx react-native init</code> with <code>no-hoist</code>option<a href="#npx-react-native-init-with-no-hoistoption" class="hash-link" aria-label="Direct link to npx-react-native-init-with-no-hoistoption" title="Direct link to npx-react-native-init-with-no-hoistoption">​</a></h2><p>react native의 <code>npx react-native init</code>을 이용해서 모노레포의 하위 폴더에 설치 후, 앱을 실행해보려하면 여러가지 경로 관련 에러가 발생하게됩니다. <code>react-native</code>의 metro 서버를 실행하기까지 여러 스크립트들이 상대 경로로 작성된 것들이 많아서 그렇습니다.</p><p>처음에는 유지보수 측면에서 그러한 설정들을 최대한 수정하고 싶지않을 방법을 찾아보니 yarn의 <code>no-hoist</code> 옵션을 활용하면 될 것 같아 보였습니다.</p><p>yarn 의 <a href="https://classic.yarnpkg.com/blog/2018/02/15/nohoist/" target="_blank" rel="noopener noreferrer"><code>no-hoist</code> 옵션</a>은 yarn 의 workspaces로 여러 패캐지를 관리하려할 때 특정 패키지들은 개별 디렉토리 경로에 <code>node_modules</code>를 따로 두어 공유하지않도록 하는 방법입니다. 사실 가장 간편한 방법이지만 이렇게 할 경우, 따로 repo를 만드는게 더 나을 것 같아 해당 방식은 적용하지 않는게 나을 듯합니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="npx-react-native-init-with-직접-경로-수정"><code>npx react-native init</code> with 직접 경로 수정<a href="#npx-react-native-init-with-직접-경로-수정" class="hash-link" aria-label="Direct link to npx-react-native-init-with-직접-경로-수정" title="Direct link to npx-react-native-init-with-직접-경로-수정">​</a></h2><p>위 두 가지 방법을 적용해보고 장,단점을 따져보니 <code>react-native</code>의 빌드, 배포스크립트들을 수정하는게 어렵지않다면 빠르게 수정하는게 좋을 듯 싶어서 진행해보았고 수정할 양이 많지않고 리액트 버젼 업데이트를 쫓아가기도 쉬울 것 같아서 해당 방식을 채택하기로했습니다.</p><p>간단히, 어떤 스크립트들을 수정하면 되는지 최신 버젼의 CLI로 만들어지는 프로젝트 템플릿을 토대로 수정을 진행해보고자 합니다.</p><p>주로 아래 링크를 참고많이 하였고 최신화된 부분들도 있으니 참고 바랍니다.</p><blockquote><p><a href="https://www.callstack.com/blog/setting-up-react-native-monorepo-with-yarn-workspaces" target="_blank" rel="noopener noreferrer">https://www.callstack.com/blog/setting-up-react-native-monorepo-with-yarn-workspaces</a></p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="프로젝트-생성">프로젝트 생성<a href="#프로젝트-생성" class="hash-link" aria-label="Direct link to 프로젝트 생성" title="Direct link to 프로젝트 생성">​</a></h3><p>모노레포를 아래와 같은 구조로 만든다고 해보겠습니다.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">your-project</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|-- package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|-- packages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    |-- mobile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        |-- package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    |-- web</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        |-- package.json</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>mobile 프로젝트는 아래와 CLI를 통해 프로젝트 템플릿으로 생성하게 됩니다.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ npx react-native init mobile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ios-관련-스크립트-수정">ios 관련 스크립트 수정<a href="#ios-관련-스크립트-수정" class="hash-link" aria-label="Direct link to ios 관련 스크립트 수정" title="Direct link to ios 관련 스크립트 수정">​</a></h3><ul><li>ios/Podfile 수정</li></ul><p>실제 node_modules의 경로를 가리키도록 관련 경로를 수정해줍니다.</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 수정 ../node_modules =&gt; ../../../node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">require_relative '../../../node_modules/react-native/scripts/react_native_pods'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 수정 ../node_modules =&gt; ../../../node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">require_relative '../../../node_modules/@react-native-community/cli-platform-ios/native_modules'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">target 'SampleApp' do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config = use_native_modules!</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    post_install do |installer|</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        react_native_post_install(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        installer,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # 추가: 해당 인자를 추가해줍니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # "node_modules/react-native/scripts/react_native_pods" 루비 스크립트를 확인하면</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # 입력이 없으면 "../node_modules/react-native" 로 처리됩니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "../../../node_modules/react-native",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :mac_catalyst_enabled =&gt; false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        __apply_Xcode_12_5_M1_post_install_workaround(installer)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>Project settings &gt; Build Phases open “Bundle React Native code and images”</li></ul><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">set -e</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- WITH_ENVIRONMENT="../../node_modules/react-native/scripts/xcode/with-environment.sh"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- REACT_NATIVE_XCODE="../../node_modules/react-native/scripts/react-native-xcode.sh"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+ WITH_ENVIRONMENT="../../../node_modules/react-native/scripts/xcode/with-environment.sh"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+ REACT_NATIVE_XCODE="../../../node_modules/react-native/scripts/react-native-xcode.sh"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/bin/sh -c "$WITH_ENVIRONMENT $REACT_NATIVE_XCODE"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>위처럼 경로에 <code>../../</code>를 추가해줍니다.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="android-스크립트-수정">android 스크립트 수정<a href="#android-스크립트-수정" class="hash-link" aria-label="Direct link to android 스크립트 수정" title="Direct link to android 스크립트 수정">​</a></h3><ul><li><code>android/settings.gradle</code> 수정</li></ul><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rootProject.name = 'SampleApp'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apply from: file("../../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">include ':app'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">includeBuild('../../../node_modules/react-native-gradle-plugin')</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>마찬가지로, <code>../../</code> 경로를 추가해줍니다.</p><ul><li><code>android/app/build.gradle</code> 수정</li></ul><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//   The folder where the react-native NPM package is. Default is ../node_modules/react-native</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">reactNativeDir = file("../../../../node_modules/react-native")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//   The folder where the react-native Codegen package is. Default is ../node_modules/react-native-codegen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">codegenDir = file("../../../../node_modules/react-native-codegen")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cliFile = file("../../../../node_modules/react-native/cli.js")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apply from: file("../../../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>android/app/build.gradle</code> 파일에서는 파일 depth가 더 깊기떄문에 주의해서 경로를 수정해줍니다.</p><p><code>../../../../node_modules</code> 로 스크립트들이 처리되도록 해주면 안드로이드 세팅이 마무리되게 됩니다.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="metroconfigjs-수정"><code>metro.config.js</code> 수정<a href="#metroconfigjs-수정" class="hash-link" aria-label="Direct link to metroconfigjs-수정" title="Direct link to metroconfigjs-수정">​</a></h3><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> path </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"path"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">watchFolders</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">resolve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">__dirname</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../../node_modules"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>마지막으로 metro가 <code>node_modules</code>의 정확한 위치를 알 수 있도록 위 <code>watchFolders</code> 값을 추가해주도록 합니다.</p><h1>정리</h1><p>React Native를 mono repo로 설정하기 위한 3가지 옵션을 제안해봤고 최종적으로 채택한 React Native 공식 템플릿을 기반으로 <code>node_modules</code> 경로를 스크립트에서 직접 수정하는 방법 채택하고 설정해봤습니다.</p><p>사실 NX에서 제공하는 프로젝트 템플릿이 어느정도 증명되면 그 방식을 채택하는 것이 나을 것입니다.</p><p>하지만, NX를 관리하는 팀의 큰 관심사가 아니라는 것을 깃허브 이슈 커뮤니케이션을 통해 알 수 있으니 직접 수정하는 것이 현명한 선택이라 판단했습니다. 아무래도 React Native를 계속 다룰 생각이라면 내부적으로 저수준에서 어떻게 처리되는지 파악하는게 중요할 것 같습니다.</p><h1>Reference</h1><blockquote><p><a href="https://nx.dev/packages/react-native" target="_blank" rel="noopener noreferrer">https://nx.dev/packages/react-native</a></p></blockquote><blockquote><p><a href="https://classic.yarnpkg.com/blog/2018/02/15/nohoist/" target="_blank" rel="noopener noreferrer">https://classic.yarnpkg.com/blog/2018/02/15/nohoist/</a></p></blockquote><blockquote><p><a href="https://www.callstack.com/blog/setting-up-react-native-monorepo-with-yarn-workspaces" target="_blank" rel="noopener noreferrer">https://www.callstack.com/blog/setting-up-react-native-monorepo-with-yarn-workspaces</a></p></blockquote>]]></content:encoded>
            <category>react-native</category>
            <category>nx</category>
            <category>mono-repo</category>
        </item>
        <item>
            <title><![CDATA[AST 분석을 활용해서 컴포넌트 추적해보기]]></title>
            <link>https://peanut-lover.github.io/component-tracking-with-ast</link>
            <guid>https://peanut-lover.github.io/component-tracking-with-ast</guid>
            <pubDate>Tue, 17 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Webpack Plugin을 활용해서 Component 사용 내역 확인하는 프로젝트]]></description>
            <content:encoded><![CDATA[<p>2022 패스트 캠퍼스에서 진행하는 inner circle 디자인시스템 스터디에서 진행했던 내용을 기반으로 작성한 글입니다.</p><p>스터디에서 진행할 프로젝트의 주제를 정하기까지 꽤 많은 고민을 했습니다. 왜냐하면 디자인 시스템의 정의 자체가 조직, 프로젝트마다 달라질 만큼 추상적인 주제였기에 팀원들간의 합의점을 찾는 것이 어려웠습니다.</p><p>그래서 다른 조직이 사용하는 디자인 시스템의 형태를 집중하기보다는 현재 개발자와 디자이너가 협업하는데에 있어서 방해가 되는 문제에 대한 문제정의를 해보고 그 문제를 해결하는 도구 혹은 워크플로우를 한번 개선해보는 방향으로 고민을 시작해보았습니다.</p><p>개발자, 디자이너 지인들과 인터뷰를 통해 디자인 시스템에서의 여러 문제들을 파악해볼 수 있었습니다.</p><p>협업에 있는 분들과의 인터뷰를 통해 얻을 수 있는 정보 중 하나는 아래와 같았습니다.</p><blockquote><p>개발자와 디자이너가 바라보는 디자인 시스템의 시각은 굉장히 달랐고 디자이너가 룩앤필 일치시키기 위해서는 개발자들과의 많은 커뮤니케이션 비용이 필요합니다.</p></blockquote><p>위 내용 이외에도 디자인 시스템이 원활히 동작하는데 방해를 주는 다양한 요소가 있었지만 우선순위를 정할 만큼 많은 정보를 수집하기가 어려워서 <strong>개인적으로 겪었던</strong> 디자인 - 개발 워크플로우 경험에서 크게 개선하고 싶었던 요소를 해보기로 했습니다. (일이 아니라 사이드 프로젝트이기에 어느정도 시행착오를 예상했습니다.)</p><p>프로젝트를 진행하기전에 이번 PoC(Proof Of Concept)프로젝트를 통해 해결하고자하는 문제에 대한 문제정의를 해보겠습니다.</p><h1>문제정의</h1><p>✏️ "디자인와 개발자가 컴포넌트를 <strong>언제 어디서 어떻게</strong> 사용하는지 추적하는 것은 쉽지 않다. 특히, 문서화가 되어있지않다면 디자이너가 혼자 컴포넌트가 사용되는 화면을 찾는 것 자체가 불가능할 수도 있다."</p><p>컴포넌트를 왜 찾아야할까요? 일관성(look and feel)을 유지하기 위해서라고 말할 수 있겠습니다. 이런 측면에서 보면 컴폰넌트를 쉽게 못 찾는 것이 컴포넌트 일관성을 유지하기가 어렵다의 원인 중 하나가 될 수 있을 것 같습니다.</p><p>결론적으로 <strong>컴포넌트 일관성을 유지하기 어렵다</strong>가 진짜 문제이고 그 문제의 원인 중에 하나인 컴포넌트를 쉽게 찾을 수 없다는 것을 해결하기 위해 저희는 이번 PoC를 진행한다고 볼 수 있겠습니다.</p><blockquote><p>👀 왜 일관성이 유지되어야하느냐?라고 또 한번 생각해볼 수 있지만 널리 알려진 디자인 시스템의 장점중 하나이기에 충분히 증명되었기에 이 정도 문제정의라면 충분할 것 같습니다.</p></blockquote><h1>해결 방안</h1><p>문제 정의와 그 문제의 원인을 확인했으니 이번에는 그 원인을 해결하는 방안에 대해 생각해보겠습니다.</p><p>아주 감사하게도 <a href="https://www.youtube.com/watch?v=6EAnAaXnOEQ&amp;t=910s" target="_blank" rel="noopener noreferrer">배시시 디자인시스템 구성을 소개하는 유튜브 영상</a>이 공개되어있었습니다. 정말 좋은 내용인데 조회 수가 적은게 의아했습니다. 아마 영상에서 다루는 주제자체가 생소하고 흔히 시도할 수 없는 주제여서 그런 듯합니다.</p><p>위 배시시 영상의 내용 중 프러덕트 별로 어디서 컴포넌트가 사용되는지를 웹팩 플러그인을 이용해서 추적하고 종합 &amp; 정리해서 보여주는 작업을 진행한 것을 보고 아이디어를 얻어 비슷한 주제로 PoC 프로젝트를 팀원들과 진행하기로 했습니다.</p><p>컴포넌트가 어디서 어떻게 사용되는지는 <strong>웹팩의 AST 분석과정</strong>과 <strong>Module Dependency Resolving</strong> 과정에 개입해서 프로젝트내에 컴포넌트 사용 정보(Syntax 수준)를 추출해보기로 결정했습니다.</p><p>저도 웹 프론트 개발을 하면서 사용만해봤지 직접 만들거나 깊이 이해하지 못한 기술들을 사용하려니 어려움이 많았습니다. 그리고 특히 AST 분석하는 방법은 명확한 과정이나 자료가 충분치 않아서 오픈소스나 혹은 <code>under the hood</code>(내부 원리)수준의 내용을 다루는 글을 활용해서 이해해야했습니다.</p><h1>Webpack Build 시 특정 React Component Syntax 추적하기</h1><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>만약, 실제 잘 동작하는 코드를 보고싶다면 해당 프로젝트 코드를 확인해주세요.</p><p><a href="https://github.com/InnerCircleA/mono-repo/tree/main/packages/component-tracking-plugin" target="_blank" rel="noopener noreferrer">https://github.com/InnerCircleA/mono-repo/tree/main/packages/component-tracking-plugin</a></p></div></div><p>어떤 작업들을 해야할 지 정리해보면 크게 3가지 정도의 작업으로 나눌 수 있습니다.</p><ul><li>자바스크립트 모듈 번들링시 리액트 컴포넌트 사용정보를 수집<ul><li>AST 분석 단계에서 React Element 생성 함수 호출을 분석</li></ul></li><li>컴포넌트가 <strong>어떤 화면에서</strong> 컴포넌트가 사용되었는지에 대한 정보 수집</li><li>위 정보를 종합해서 JSON 결과로 출력</li></ul><p>사실 위 PoC를 수행 후 수집된 output를 어떻게 처리할지는 다양할 수 있으나 이번 관심사가 아니기에 위 세 가지 단계까지를 목표로 정했습니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="custom-webpack-plugin-생성">Custom Webpack Plugin 생성<a href="#custom-webpack-plugin-생성" class="hash-link" aria-label="Direct link to Custom Webpack Plugin 생성" title="Direct link to Custom Webpack Plugin 생성">​</a></h2><p>웹팩 플러그인은 webpack hook을 이용해서 번들링 과정에 개입을 할 수 있습니다. 커스텀 플러그인은 아래와 같이 정의할 수 있습니다.</p><blockquote><p><a href="https://webpack.js.org/contribute/writing-a-plugin/#root" target="_blank" rel="noopener noreferrer">https://webpack.js.org/contribute/writing-a-plugin/#root</a></p></blockquote><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyExampleWebpackPlugin</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">compiler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 여기서 훅을 이용해서 정보 수집</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>사실 여기서 중요한 것은 웹팩에서 제공하는 훅들이 어떤 것들이 있는지 알고 어떻게 찾아서 활용하느냐를 아는 것이 중요합니다. 하지만 <a href="https://webpack.js.org/api/compiler-hooks/" target="_blank" rel="noopener noreferrer">공식문서</a>만 봐도 제공되는 훅들의 양에 압도되기도합니다. 학습을 위해서 플러그인에서 훅들을 하나씩 호출해보면서 과정을 확인하는 방향으로 접근하거나 <a href="https://github.com/webpack/webpack" target="_blank" rel="noopener noreferrer">Webpack 오픈소스</a>에서 훅들이 어디서 호출되는지 찾아볼 수 있습니다.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>기초 지식없이 웹팩 플러그인 제작을 시작하기에는 학습곡선이 너무 가파르니 전체적인 그림을 머리속에 그리는 데에 도움이 많이 되었던 블로그 글을 추가로 공유하겠습니다.</p><blockquote><p><a href="https://indepth.dev/posts/1482/an-in-depth-perspective-on-webpacks-bundling-process" target="_blank" rel="noopener noreferrer">https://indepth.dev/posts/1482/an-in-depth-perspective-on-webpacks-bundling-process</a></p></blockquote><p>위 블로그에서는 웹팩이 어떤 과정을 거쳐서 번들링된 결과물을 만들어 내는지를 다이어그램과 간단한 예시코드를 통해 잘 설명해주고 있습니다. 웹프론트 개발자라면 한번 읽어보면 많은 도움이 될 것 같습니다.</p><p>위 글을 읽어보면 entry file(진입점, 주로 index.js)을 시작으로 어떻게 dependency graph를 생성하고 처리하는지 큰 그림을 그려볼 수 있습니다.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ast-분석-단계에서-_jsx-호출-확인하기">AST 분석 단계에서 <code>_jsx()</code> 호출 확인하기<a href="#ast-분석-단계에서-_jsx-호출-확인하기" class="hash-link" aria-label="Direct link to ast-분석-단계에서-_jsx-호출-확인하기" title="Direct link to ast-분석-단계에서-_jsx-호출-확인하기">​</a></h2><p>자! 이제 웹팩 번들링 과정 중 특정 모듈의 AST 분석 중 각 단계를 hooking할 수 있는 몇가지 훅을 소개하고 그 훅을 이용해서 무엇을 얻을 수 있을지 한번 알아보겠습니다.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">ComponentTrackingPlugin</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">complier</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    compiler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">hooks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">normalModuleFactory</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">className</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">factory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      factory</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">hooks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">parser</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"javascript/auto"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">className</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">parser</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> options</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic">// TODO: Use Parsing Hooks</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>위와 같이 <code>factory.hooks.parser</code> 내에서 모듈(하나의 자바스크립트 파일)내에서 Javascript Syntax 분석 과정에 접근할 수 있는 훅들이 있습니다.</p><blockquote><p>🚧 실제 트랜스파일링된 자바스크립트 코드에서 ReactElement 를 생성하는 코드들을 탐지할 방법은 어떤 babel plugin으로 변형되었으냐 등등에 따라 다양할 수 있어서 case by case를 모두 해결해줄 코드를 작성하는 것은 무리일 수 있습니다.</p><p>그래서 대표적인 boilerplate인 <code>CRA(create-react-app)</code>, <code>next-js</code> 의 기본 빌드 세팅을 대상으로 고정으로 정해두고 플러그인을 개발하는 것이 이상적일 것 같습니다. 이렇게 한다해도 다양한 예외케이스가 생길 수 있습니다.</p></blockquote><p><a href="https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html" target="_blank" rel="noopener noreferrer">React 17 이상 부터는 적용되는 JSX Transform 업데이트</a>를 적극이용해보도록 하겠습니다.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Inserted by a compiler (don't import it yourself!)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> jsx </span><span class="token imports keyword module" style="color:#00009f">as</span><span class="token imports"> _jsx </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react/jsx-runtime"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">App</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_jsx</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"h1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">children</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Hello world"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>프로젝트에서 항상 위와 같은 형태로 React Component를 사용한다고 가정한다면 저희는 AST 분석에서 <code>_jsx</code>가 호출되었는지를 찾아내면 컴포넌트 정보를 얻어낼 수 있습니다.</p><p>본격적으로 AST Tree에 접근해보겠습니다.</p><p><code>parser.hooks.finish</code> 훅을 이용해서 모듈의 AST Tree를 탑색하면서 <code>_jsx</code>가 호출된 곳들을 수집하는 코드를 작성해봅시다.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> estraverse </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'estraverse'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">checkJSXCallExpression</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">expression</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> expression</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">type</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'CallExpression'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> expression</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">callee</span><span class="token operator" style="color:#393A34">?.</span><span class="token plain">type </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Identifier'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">expression</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">callee</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'_jsx'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> expression</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">callee</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'_jsxDEV'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// _jsxDev 는 webpack development mode에서 처리됨</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">ComponentTrackingPlugin</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">componentInfoMap</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">complier</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         compiler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">hooks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">normalModuleFactory</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">className</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">factory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            factory</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">hooks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">parser</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'javascript/auto'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">className</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">parser</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> options</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    parser</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">hooks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">finish</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">className</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">ast</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> currentNormalModule </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> parser</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">module</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Module Data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> componentNames </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        estraverse</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">traverse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ast</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token function-variable function" style="color:#d73a49">enter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">node</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> parent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">checkJSXCallExpression</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> jsxCallExpression </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> node</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> args </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> jsxCallExpression</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">arguments</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> elementType </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">elementType</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">type</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Identifier'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    componentNames</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">elementType</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">componentInfoMap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentNormalModule</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> componentNames</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>위 코드는 단순하게 <code>_jsx(Button, {}, [])</code> 라는 표현이 있을 때 <code>Button</code> 를 수집하게 됩니다. 이런 식으로 리액트 컴포넌트 이름을 수집할 수 있습니다. 아주 간단히 AST 처리방식을 소개한 것이고 이것 외에도 많은 예외처리를 해줘야할 것입니다. <a href="https://astexplorer.net" target="_blank" rel="noopener noreferrer">ast explorer 툴</a> 를 이용해서 실제 코드가 어떻게 AST 트리로 변형되는지 이해하고 처리해주는 것이 좋습니다.</p><p>그 외 컴포넌트의 이름 뿐만아니라 props 정보, 컴포넌트가 사용된 페이지를 수집하고 싶다면 아래 프로젝트를 참조해주세요.</p><blockquote><p><a href="https://github.com/InnerCircleA/mono-repo/tree/main/packages/component-tracking-plugin" target="_blank" rel="noopener noreferrer">https://github.com/InnerCircleA/mono-repo/tree/main/packages/component-tracking-plugin</a></p></blockquote><p>위 작업을 통해 매 모듈(소스파일 하나)마다 Syntax 수준의 코드토큰들을 얻을 수 있었습니다. 다만, 자바스크립트자체가 머신 readable하지않아 코드작성에 <strong>강한 규칙</strong>이 적용되어있어야 유의미한 정보를 얻어낼 수 있습니다. 특히, 자바스크립트의 transpiler(바벨)가 코드를 어떻게 바꾸는지에 따라 AST 분석단계에서는 다른 형태의 코드구조를 맞이하게 될 것입니다.</p><p>그리고 여기까지 작업을 했을 때 각 모듈마다 컴포넌트 사용여부를 <strong>약하게 추측</strong>할 수 있습니다. 이어서 웹팩의 Module Graph(모듈간의 의존성)를 이용해서 컴포넌트간의 관계를 추측해보겠습니다.</p><blockquote><p>위에서 <strong>약하게 추측</strong>한다고 표현한 이유는 모듈안에 <code>&lt;Component/&gt;</code> 라는 표현이 있다는 것만으로 컴포넌트 사용됐다고 표현할 수 없습니다. 컴포넌트 이름만으로는 실제 우리가 추적하고 싶은 컴포넌트인지 모르니 실제 연결된(<code>import</code>된) 모듈이 우리가 추적하는 모듈인지 확인하는 과정이 필요합니다.</p></blockquote><blockquote><p>저는 이런 문제를 import 단계에서 확인해서 처리하도록 했습니다.
<a href="https://github.com/InnerCircleA/design-system-monitoring/blob/main/packages/component-tracking-plugin/src/index.js#L27-L35" target="_blank" rel="noopener noreferrer">https://github.com/InnerCircleA/design-system-monitoring/blob/main/packages/component-tracking-plugin/src/index.js#L27-L35</a></p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="module-graph-이용해서-컴포넌트를-사용하는-페이지-찾아내기">Module Graph 이용해서 컴포넌트를 사용하는 페이지 찾아내기<a href="#module-graph-이용해서-컴포넌트를-사용하는-페이지-찾아내기" class="hash-link" aria-label="Direct link to Module Graph 이용해서 컴포넌트를 사용하는 페이지 찾아내기" title="Direct link to Module Graph 이용해서 컴포넌트를 사용하는 페이지 찾아내기">​</a></h2><p>위 작업까지 하게되면 Module과 사용되는 컴포넌트들의 정보를 1:1로 맵핑시킬 수 있지만 이런 정보가 크게 의미가 있을까요?</p><p>하나의 프로젝트에 <strong>ConfirmButton은 N개 사용, CancelButtom은 M개 사용</strong> 이런 정보가 디자이너, 개발자에게 보여진다해서 도움이 될 것 같진않습니다. 대신 어떤 페이지에서 어떤 컴포넌트가 사용되었다와 같은 정보를 제공할 수 있다면 적어도 컴포넌트가 사용된 프로젝트를 찾는 시간이 단축되는 것과 같은 도움이 될 것으로 보입니다.</p><p>그럼 우선, 어떤 모듈이 페이지 모듈일지 판단할 방법은 생각해보겠습니다.
앞서 말하면 자바스크립트 AST를 분석하는 단계에서는 모듈이 페이지 컴포넌트인지를 구분하는 것은 불가능합니다. 저희는 사람이기에 많은 맥락상에서 이름과 UI 특성들을 보고 판단하기에 가능하지만 기계는 쉽게 판단할 수 없습니다.</p><p>그래서 고안해낸 방법은 <strong>특별한 표식인 Anotation</strong>을 사용하는 것입니다. 예를들면 저는 <code>page()</code>라는 함수가 모듈의 가장 바깥 scope에 호출되었을 때, 해당 모듈은 페이지 모듈이라고 판단하도록 규칙을 정할 수 있습니다.</p><p>위 방법을 이용하면 AST 분석단계에서 Page로 구분되는 모듈과 페이지 정보를 따로 모아둘 수 있습니다.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">checkPageModuleFromStatement</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">statement</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> statement</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">type</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ExpressionStatement"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> statement</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">expression</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">type</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"CallExpression"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> statement</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">expression</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">callee</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">type</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Identifier"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> statement</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">expression</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">callee</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"page"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">ComponentTrackingPlugin</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">componentInfoMap</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">pageInfoMap</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">complier</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        compiler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">hooks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">normalModuleFactory</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">className</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">factory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            factory</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">hooks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">parser</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'javascript/auto'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">className</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">parser</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> options</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> currentNormalModule </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> parser</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">module</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    parser</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">hooks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">statement</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">className</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">statement</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                         </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">checkPageModuleFromStatement</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">statement</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> descriptionFile </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                currentNormalModule</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">resourceResolveData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">descriptionFileData</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">pageInfoMap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentNormalModule</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                </span><span class="token literal-property property" style="color:#36acaa">project</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">descriptionFile</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation property-access">name</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">@</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">descriptionFile</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation property-access">version</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                </span><span class="token literal-property property" style="color:#36acaa">path</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">basename</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentNormalModule</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">resource</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>위와 같이 Page 모듈과 모듈의 정보(파일이름, 프로젝트 이름)을 수집할 수 있습니다. 이전에 사용했던 <code>parser.hooks.finish</code> 를 사용할 수도 있지만 전체 AST 트리가 필요한 작업은 아니기에 <code>parser.hooks.statement</code> 훅을 사용해보았습니다.</p><p>지금까지 모듈별 컴포넌트들의 사용 내역과 페이지 모듈이 어떤 모듈인지 알아낼 수 있었습니다.</p><p>마지막으로 할 작업은 모듈간의 연결관계를 통해 어떤 페이지에 어떤 컴포넌트가 속해 있는지를 연결해주면 됩니다. webpack 내부에서 사용되는 <code>moduleGraph</code> 객체를 이용하면 모듈간의 의존관계를 탐색할 수 있습니다.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">traverseModuleGraph</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">rooteNormalModule</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> graphModuleMap</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> checkModuleCallback</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> visited </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">traverse</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">crtNode</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">visited</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">crtNode</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        visited</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">crtNode</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> correspondingGraphModule </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> graphModuleMap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">crtNode</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">correspondingGraphModule</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">checkModuleCallback</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">crtNode</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> correspondingGraphModule</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> childrens </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token known-class-name class-name">Array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword module" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">correspondingGraphModule</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">outgoingConnections</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">module</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> childrens</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">traverse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">traverse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rooteNormalModule</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">ComponentTrackingPlugin</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">componentInfoMap</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">pageInfoMap</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">complier</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        compiler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">hooks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">compilation</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">className</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">compilation</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            compilation</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">hooks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">finishModules</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">className</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">modules</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">moduleGraph</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">_moduleMap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> moduleMap </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> compilation</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">pageNormalModule</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pageInfo</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">pageInfoMap</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token function" style="color:#d73a49">traverseModuleGraph</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        pargeNormalModule</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        moduleMap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">normalModule</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> graphModule</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">componentInfoMap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">has</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">normalModule</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                pageInfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">components</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain">pageInfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">components</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    </span><span class="token spread operator" style="color:#393A34">...</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">componentInfoMap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">normalModule</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>모듈 의존성 그래프을 탐색하기 위해서 <code>traverseModuleGraph</code> 라는 함수를 만들었는데 위에서 소개했던 <a href="https://indepth.dev/posts/1482/an-in-depth-perspective-on-webpacks-bundling-process" target="_blank" rel="noopener noreferrer">웹팩 번들링 과정</a> 글의 내용을 참조했습니다.</p><p>간단히 해당 함수를 설명해보면, 웹팩에서 사용하는 모듈 소스 파일을 파싱된 결과물인 <code>NormalModule</code> 객체를 그래프간의 연결정보가 추가된 객체를 <code>ModuleGraphModule</code> 라는 객체로 다룹니다. 그래서 탐색에 필요한 그래프 모듈간의 연결정보인 <code>moduleMap</code>을 두번째 인자로 넣어주게 됩니다. 그리고 모듈을 탐색할 때마다 호출되는 callback 함수를 외부로 노출시켜서 하위 모듈이 탐색될 떄마다 외부에서 특별한 처리해줄 수 있도록 해주었습니다.</p><p>이제 component 정보를 page module과 연결해주기만하면 저희가 원하는 최종적인 결과물인 페이지 모듈마다 어떤 컴포넌트가 있는지를 확인할 수 있게됩니다.</p><p>최종적으로 결과물을 뽑아낼 수 있는 적절한 hook을 찾아보면 컴파일이 끝나는 훅인 <code>compiler.hooks.done</code>가 있으니 이를 활용해서 최종 결과물을 JSON 파일로 출력해보겠습니다.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">ComponentTrackingPlugin</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">componentInfoMap</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">pageInfoMap</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    compiler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">hooks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">done</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">className</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">done</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token known-class-name class-name">JSON</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">stringify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token known-class-name class-name">Array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword module" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">pageInfoMap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">values</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      fs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">writeFile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"tracking.json"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Generate tracking.json\n"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>최종적으로 완성된 플러그인을 이용하면 아래와 같은 결과를 확인할 수 있습니다.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"project"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"sample1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"path"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HomePage.js"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"components"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"Button"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"project"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"sample1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"path"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"DetailPage.js"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"components"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"Button"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Button"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>사실 위의 정보 정도로는 어떤 컴포넌트가 어떤 페이지에 몇번 사용되었느냐 정도의 정보만 얻을 수 있습니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="정리">정리<a href="#정리" class="hash-link" aria-label="Direct link to 정리" title="Direct link to 정리">​</a></h2><p>간단히 커스텀 Webpack Plugin를 이용해서 자바스크립트 번들링 시점에 컴포넌트의 사용을 추적해보았습니다. 아마 추가적인 정보도 AST분석을 잘한다면 얻어낼 수 있을 것 같습니다.</p><p>하지만 트랜스파일링된 결과물을 가지고 AST 분석해야하기에 예측하지 못한 경우가 많이 발생할 수 있습니다. 그래서 실제로 활용해보려한다면 아마 팀이나 프로젝트 단위로 강한 규칙(번들링할 때 사용해야할 babel 규칙, React Component 표현 규칙, 린트 적용 등등)을 둬야할 듯합니다.</p><p>이번 PoC 프로젝트를 진행하기 전에 확신을 가졌던 이유는 개발자가 코드를 뒤적거리며 컴포넌트가 사용되는 부분을 찾아다니는 형태는 코드가 충분히 해결해줄 수 있을 것이라고 생각했었기 때문이었습니다. 웹팩이라는 번들러의 도움을 크게 받아서 진행해보았고 결과적으로 개발 역량이 충분히 받쳐준다면 디자이너 혹은 개발자가 매번 특정 컴포넌트가 어디에서 사용됐는지 쫓아다니지 않아도 될 것으로 확인했습니다.</p><p>더해서 큰 조직에서 코어 라이브러리를 사용자들이 어떻게 사용하고 있는지 궁금하다면 Component들의 props를 위의 과정처럼 유사하게 추출해서 어떤 방향으로 디자인 컴포넌트 라이브러리를 확장하고 개선해나가야할지 핵심 지표로 활용할 수도 있을 것 같습니다.</p><p>그리고 무엇보다 이런 새로운 시도로 웹팩 플러그인과 번들링 과정자체를 학습했다는 것과 <strong>잠자고 있던 실험 정신</strong>이 깨어났다는데 의미가 있을 것이 더 값진 결과가 아닐까 싶습니다.</p>]]></content:encoded>
            <category>ast</category>
            <category>webpack</category>
            <category>design-system</category>
            <category>react</category>
        </item>
        <item>
            <title><![CDATA[블로그 시작을 알리며...]]></title>
            <link>https://peanut-lover.github.io/20230-intro</link>
            <guid>https://peanut-lover.github.io/20230-intro</guid>
            <pubDate>Sun, 04 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[This is my first post on Docusaurus 2.]]></description>
            <content:encoded><![CDATA[<p>안녕하세요. 블로그 주인입니다.</p><p>앞으로 전문적인 프론트엔드 개발자로 성장하기 위해서
다양한 좋은 글들을 작성해보겠습니다.</p><p>잘못된 내용 혹은 수정이 필요한 내용이 있다면 아낌없이 피드백이 주시면 감사할 것 같습니다.</p><p>글쓰는데 재주는 없지만 많이 해봐야 늘거라고 생각이 듭니다! 감사합니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2023">2023<a href="#2023" class="hash-link" aria-label="Direct link to 2023" title="Direct link to 2023">​</a></h2><p>첫 블로그의 시작을 알리며 포스팅 TODO 리스트를 남겨두고자 합니다.</p><ul class="contains-task-list containsTaskList_mC6p"><li class="task-list-item"><p><input type="checkbox" checked="" disabled=""> <!-- -->AST분석을 활용해서 컴포넌트 추적하기</p></li><li class="task-list-item"><p><input type="checkbox" disabled=""> <!-- -->Amplify를 활용한 풀스택 프로젝트 개발</p></li><li class="task-list-item"><p><input type="checkbox" disabled=""> <!-- -->Storybook Design System Guide 정리</p></li><li class="task-list-item"><p><input type="checkbox" disabled=""> <!-- -->리액트에서의 가독성이란?</p><ul><li>비동기 처리 방식(Suspense)</li><li>useEffect 남발은 독이 될듯.</li><li>좋은 react builtin hook들을 알아보고 사용해보기.</li></ul></li></ul>]]></content:encoded>
            <category>intro</category>
            <category>docusaurus-v2</category>
        </item>
    </channel>
</rss>